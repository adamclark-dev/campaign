diff --git a/entity_reference_revisions.services.yml b/entity_reference_revisions.services.yml
new file mode 100644
index 0000000..3b79766
--- /dev/null
+++ b/entity_reference_revisions.services.yml
@@ -0,0 +1,7 @@
+services:
+  serializer.normalizer.entity_reference_revision_item.hal:
+    class: Drupal\entity_reference_revisions\Normalizer\hal\EntityReferenceRevisionItemNormalizer
+    parent: serializer.normalizer.entity_reference_item.hal
+    arguments: ['@rest.link_manager', '@serializer.entity_resolver']
+    tags:
+      - { name: normalizer, priority: 11 }
diff --git a/src/Normalizer/hal/EntityReferenceRevisionItemNormalizer.php b/src/Normalizer/hal/EntityReferenceRevisionItemNormalizer.php
new file mode 100644
index 0000000..63d6a53
--- /dev/null
+++ b/src/Normalizer/hal/EntityReferenceRevisionItemNormalizer.php
@@ -0,0 +1,32 @@
+<?php
+
+/**
+ * @file
+ * Contains \Drupal\entity_reference_revisions\Normalizer\hal\EntityReferenceRevisionItemNormalizer.
+ */
+
+namespace Drupal\entity_reference_revisions\Normalizer\hal;
+
+use Drupal\hal\Normalizer\EntityReferenceItemNormalizer;
+
+class EntityReferenceRevisionItemNormalizer extends EntityReferenceItemNormalizer {
+
+  /**
+   * The interface or class that this Normalizer supports.
+   *
+   * @var string
+   */
+  protected $supportedInterfaceOrClass = 'Drupal\entity_reference_revisions\Plugin\Field\FieldType\EntityReferenceRevisionsItem';
+
+  /**
+   * Overrides \Drupal\hal\Normalizer\FieldItemNormalizer::constructValue().
+   */
+  protected function constructValue($data, $context) {
+    $value = parent::constructValue($data, $context);
+    if ($value) {
+      $value['target_revision_id'] = $data['target_revision_id'];
+    }
+    return $value;
+  }
+
+}
